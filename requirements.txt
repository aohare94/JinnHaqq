# ============================================================================
#                QURANIC AI ALIGNMENT PROJECT v2.0 REQUIREMENTS
# ============================================================================
# Optimized for Windows 11 + WSL2 + RTX 4070 Super (12GB VRAM) + 32GB RAM
# Designed for maximum token speed with FlashAttention-2 and larger models
# Enhanced for structural analysis, recursive understanding, and weight alignment
# ============================================================================

# CRITICAL: Install in WSL2 Ubuntu environment
# 1. Install CUDA Toolkit 12.1+ in WSL2
# 2. Install PyTorch with CUDA support FIRST:
#    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
# 3. Install FlashAttention: pip install flash-attn --no-build-isolation

# ===== CORE ML/LLM FRAMEWORK =====
torch>=2.1.0
torchvision>=0.16.0
torchaudio>=2.1.0
transformers>=4.37.0
accelerate>=0.25.0
peft>=0.7.0
bitsandbytes>=0.42.0
optimum>=1.16.0
auto-gptq>=0.5.0

# Flash Attention and Performance
# Install separately: pip install flash-attn --no-build-isolation
einops>=0.7.0
triton>=2.1.0

# ===== EMBEDDINGS AND SIMILARITY =====
sentence-transformers>=2.2.2
faiss-cpu>=1.7.4
faiss-gpu>=1.7.4
scikit-learn>=1.3.0
scipy>=1.11.0
umap-learn>=0.5.4
hdbscan>=0.8.29

# ===== QURANIC TEXT PROCESSING =====
datasets>=2.16.0
tokenizers>=0.15.0
arabic-reshaper>=3.0.0
python-bidi>=0.4.2
pyarabic>=0.6.15
camel-tools>=1.5.2
qalsadi>=0.4.0
tashaphyne>=0.4.0

# ===== STRUCTURAL ANALYSIS =====
networkx>=3.2
igraph>=0.10.8
graph-tool; sys_platform == "linux"  # Only on Linux/WSL
python-louvain>=0.16
community>=1.0.0
graphviz>=0.20.1
pydot>=1.4.2

# ===== NUMERICAL COMPUTING =====
numpy>=1.24.0
pandas>=2.1.0
numba>=0.58.0
cupy-cuda12x>=12.3.0  # For GPU acceleration
sparse>=0.14.0
sympy>=1.12

# ===== VISUALIZATION AND ANALYSIS =====
matplotlib>=3.8.0
seaborn>=0.13.0
plotly>=5.17.0
dash>=2.16.0
bokeh>=3.3.0
altair>=5.2.0
holoviews>=1.18.0
datashader>=0.16.0
panel>=1.3.0

# ===== INTERACTIVE TERMINAL AND UI =====
rich>=13.7.0
textual>=0.46.0
typer>=0.9.0
click>=8.1.0
prompt-toolkit>=3.0.41
questionary>=2.0.1
colorama>=0.4.6
termcolor>=2.4.0

# ===== LANGUAGE PROCESSING =====
nltk>=3.8.1
spacy>=3.7.2
stanza>=1.7.0
polyglot>=16.7.4
langdetect>=1.0.9
fasttext>=0.9.2

# ===== DEVELOPMENT AND UTILITIES =====
tqdm>=4.66.0
loguru>=0.7.2
python-dotenv>=1.0.0
pyyaml>=6.0.1
toml>=0.10.2
jsonlines>=4.0.0
orjson>=3.9.10
msgpack>=1.0.7
joblib>=1.3.2

# ===== API AND MODEL SERVING =====
fastapi>=0.108.0
uvicorn[standard]>=0.25.0
gradio>=4.8.0
streamlit>=1.29.0
websockets>=12.0
aiohttp>=3.9.0
httpx>=0.26.0

# ===== MEMORY AND PERFORMANCE =====
psutil>=5.9.6
memory-profiler>=0.61.0
line-profiler>=4.1.1
py-spy>=0.3.14
scalene>=1.5.26
pympler>=0.9

# ===== ALIGNMENT AND TRAINING =====
deepspeed>=0.12.6
pytorch-lightning>=2.1.0
wandb>=0.16.0
tensorboard>=2.15.0
mlflow>=2.8.0
optuna>=3.5.0

# ===== CONCURRENT AND ASYNC =====
asyncio
concurrent-futures
multiprocessing-logging>=0.3.4
ray>=2.8.0

# ===== TESTING AND QUALITY =====
pytest>=7.4.0
pytest-asyncio>=0.23.0
pytest-cov>=4.1.0
black>=23.12.0
isort>=5.13.0
flake8>=7.0.0
mypy>=1.8.0
bandit>=1.7.5

# ===== VERSION CONTROL AND MODELS =====
huggingface-hub>=0.19.0
gitpython>=3.1.40
dvc>=3.35.0

# ===== ARABIC AND ISLAMIC RESOURCES =====
hijri-converter>=2.3.1
islamic-calendar>=1.0.1
pyislam>=1.0.0

# ===== MATHEMATICAL AND SCIENTIFIC =====
statsmodels>=0.14.0
patsy>=0.5.4
formulaic>=0.6.6
sympy>=1.12
mpmath>=1.3.0

# ===== CACHING AND STORAGE =====
redis>=5.0.1
sqlite3
h5py>=3.10.0
tables>=3.9.2
zarr>=2.16.0

# ===== WEB SCRAPING (for Quranic resources) =====
requests>=2.31.0
beautifulsoup4>=4.12.0
scrapy>=2.11.0
selenium>=4.16.0

# ===== CONFIGURATION MANAGEMENT =====
hydra-core>=1.3.2
omegaconf>=2.3.0
configargparse>=1.7

# ===== JUPYTER AND NOTEBOOKS =====
jupyter>=1.0.0
jupyterlab>=4.0.9
ipywidgets>=8.1.1
notebook>=7.0.6

# ===== ADDITIONAL UTILITIES =====
fire>=0.5.0
click-completion>=0.5.2
python-dateutil>=2.8.2
packaging>=23.2
importlib-metadata>=7.0.0